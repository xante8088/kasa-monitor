events {
    worker_connections 1024;
}

http {
    include       /opt/homebrew/etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /opt/homebrew/var/log/nginx/access.log;
    error_log /opt/homebrew/var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream servers
    upstream frontend {
        server 127.0.0.1:3000;
    }

    upstream backend_http {
        server 127.0.0.1:5272;
    }

    upstream backend_https {
        server 127.0.0.1:8443;
    }

    # HTTP server (redirect to HTTPS)
    server {
        listen 8090;
        server_name localhost tacocat.serveirc.com;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host:8445$request_uri;
    }

    # HTTPS server
    server {
        listen 8445 ssl;
        http2 on;
        server_name localhost tacocat.serveirc.com;

        # SSL Configuration
        ssl_certificate /Users/ryan.hein/kasaweb/kasa-monitor/ssl/tacocat_serveirc_com.crt;
        ssl_certificate_key /Users/ryan.hein/kasaweb/kasa-monitor/ssl/tacocat.serveirc.com_20250819_124010.key;

        # SSL Security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # API routes (proxy to backend)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Special rate limiting for auth endpoints
            location /api/auth/login {
                limit_req zone=login burst=3 nodelay;
                proxy_pass http://backend_http;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $server_name;
            }
            
            proxy_pass http://backend_http;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # WebSocket support for real-time features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Socket.IO routes (proxy to backend)
        location /socket.io/ {
            proxy_pass http://backend_http;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Frontend routes (proxy to Next.js)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Support for Next.js hot reload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Security.txt
        location /.well-known/security.txt {
            return 200 "Contact: admin@tacocat.serveirc.com\nExpires: 2026-12-31T23:59:59.000Z\nPreferred-Languages: en\n";
            add_header Content-Type text/plain;
        }
    }

    # Admin HTTPS server (optional separate admin interface)
    server {
        listen 8446 ssl;
        http2 on;
        server_name localhost tacocat.serveirc.com;

        # SSL Configuration (same as main server)
        ssl_certificate /Users/ryan.hein/kasaweb/kasa-monitor/ssl/tacocat_serveirc_com.crt;
        ssl_certificate_key /Users/ryan.hein/kasaweb/kasa-monitor/ssl/tacocat.serveirc.com_20250819_124010.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Direct API access (no rate limiting for admin)
        location /api/ {
            proxy_pass http://backend_https;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Admin interface redirect
        location / {
            return 302 https://$host/admin;
        }
        
        location /admin {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
        }
    }
}