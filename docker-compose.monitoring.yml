version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: kasa-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - kasa-monitor
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: kasa-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - kasa-monitor
    restart: unless-stopped
    depends_on:
      - prometheus

  pushgateway:
    image: prom/pushgateway:latest
    container_name: kasa-pushgateway
    ports:
      - "9091:9091"
    networks:
      - kasa-monitor
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: kasa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - kasa-monitor
    restart: unless-stopped

networks:
  kasa-monitor:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data: