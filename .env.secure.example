# Kasa Monitor - Secure Environment Configuration Template
# 
# IMPORTANT: Copy this file to .env and replace all placeholder values with secure secrets
# NEVER commit the actual .env file to version control
# 
# To generate secure secrets, use:
#   JWT Secret: openssl rand -hex 32
#   Passwords: openssl rand -base64 24

# Environment Configuration
ENVIRONMENT=production

# JWT Configuration - MUST BE CHANGED!
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=REPLACE_WITH_64_CHAR_HEX_STRING_FROM_OPENSSL

# Database Configuration
DATABASE_URL=sqlite:///kasa_monitor.db
DATABASE_PASSWORD=REPLACE_WITH_SECURE_PASSWORD

# InfluxDB Configuration (Optional)
INFLUXDB_URL=http://localhost:8086
INFLUXDB_TOKEN=REPLACE_WITH_INFLUXDB_TOKEN
INFLUXDB_ORG=your-org
INFLUXDB_BUCKET=kasa-monitor

# Application Settings
APP_HOST=0.0.0.0
APP_PORT=8000
LOG_LEVEL=INFO

# Security Settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
SESSION_TIMEOUT_MINUTES=30
MAX_LOGIN_ATTEMPTS=5
PASSWORD_MIN_LENGTH=12

# TP-Link Kasa Configuration
# NOTE: Consider using a service account with minimal permissions
# Or better yet, use OAuth/API tokens if available
TPLINK_USERNAME=REPLACE_OR_REMOVE
TPLINK_PASSWORD=REPLACE_OR_REMOVE

# Admin Configuration
ADMIN_USERNAME=admin
# Generate with: openssl rand -base64 16
ADMIN_PASSWORD_HASH=REPLACE_WITH_BCRYPT_HASH

# Feature Flags
ENABLE_METRICS=true
ENABLE_MONITORING=true
ENABLE_API_DOCS=false

# Docker Configuration (if applicable)
DOCKER_REGISTRY=
DOCKER_IMAGE_TAG=latest