name: Build and Push Docker Image

on:
  # Manual trigger from GitHub UI
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
      reason:
        description: 'Reason for manual build'
        required: false
        default: 'Manual build requested'
  
  # Automatic trigger on source code changes only
  push:
    branches: [ main ]
    paths:
      # Docker configuration
      - 'Dockerfile'
      - 'docker-entrypoint.sh'
      - '.dockerignore'
      
      # Backend source code
      - 'backend/**/*.py'
      - 'requirements.txt'
      
      # Frontend source code
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
      - 'src/**/*.js'
      - 'src/**/*.jsx'
      - 'src/**/*.css'
      - 'public/**'
      
      # Build configuration
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.js'
      - 'tsconfig.json'
      - 'tailwind.config.js'
      - 'postcss.config.js'
      
      # Workflow configuration
      - '.github/workflows/docker-build.yml'
  
  # Build on release
  release:
    types: [ published ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: kasa-monitor

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Verify secrets are set
      run: |
        if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
          echo "ERROR: DOCKER_USERNAME secret is not set!"
          exit 1
        fi
        if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
          echo "ERROR: DOCKER_PASSWORD secret is not set!"
          exit 1
        fi
        echo "âœ“ Docker Hub secrets are configured"
        echo "Username length: $(echo -n '${{ secrets.DOCKER_USERNAME }}' | wc -c)"
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=pi5,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-
        labels: |
          org.opencontainers.image.title=Kasa Monitor
          org.opencontainers.image.description=Web application for monitoring Kasa smart devices - Raspberry Pi optimized
          org.opencontainers.image.vendor=Kasa Monitor Contributors
          org.opencontainers.image.licenses=GPL-3.0
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Update Docker Hub description
      if: github.event_name != 'pull_request'
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        readme-filepath: ./DOCKER.md