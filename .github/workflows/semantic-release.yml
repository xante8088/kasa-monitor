name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund
      
      - name: Verify semantic-release setup
        run: |
          echo "üîç Verifying semantic-release configuration..."
          if [ -f .releaserc.json ]; then
            echo "‚úÖ .releaserc.json found"
            cat .releaserc.json
          else
            echo "‚ùå .releaserc.json not found"
            exit 1
          fi
          
          echo -e "\nüì¶ Installed semantic-release packages:"
          npm list --depth=0 | grep semantic-release || echo "No semantic-release packages found"
      
      - name: Run semantic-release (Dry Run)
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "üß™ Running semantic-release in dry-run mode..."
          npx semantic-release --dry-run
      
      - name: Run semantic-release
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "üöÄ Running semantic-release..."
          npx semantic-release
      
      - name: Print release results
        if: always()
        run: |
          echo "üìã Release workflow completed"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Event: ${{ github.event_name }}"