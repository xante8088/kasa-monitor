# Manual trigger for Docker cleanup
# You can run this workflow manually from GitHub Actions tab

name: Manual Docker Cleanup
on:
  workflow_dispatch:
    inputs:
      keep_count:
        description: 'Number of recent images to keep'
        required: false
        default: '5'
        type: string
      dry_run:
        description: 'Dry run (preview what would be deleted)'
        required: false
        default: false
        type: boolean

jobs:
  cleanup:
    name: Manual Docker Cleanup
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: List packages (dry run)
      if: ${{ inputs.dry_run == 'true' }}
      uses: actions/github-script@v6
      with:
        script: |
          const { data: packages } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByUser({
            package_type: 'container',
            package_name: 'kasa-monitor',
            username: context.repo.owner
          });
          
          console.log(`Total package versions: ${packages.length}`);
          console.log(`Would keep: ${inputs.keep_count} versions`);
          console.log(`Would delete: ${Math.max(0, packages.length - parseInt(inputs.keep_count))} versions`);
          
          if (packages.length > parseInt(inputs.keep_count)) {
            const toDelete = packages.slice(parseInt(inputs.keep_count));
            console.log('Versions that would be deleted:');
            toDelete.forEach(pkg => {
              console.log(`- ${pkg.name || pkg.id} (created: ${pkg.created_at})`);
            });
          }

    - name: Delete old package versions
      if: ${{ inputs.dry_run != 'true' }}
      uses: actions/delete-package-versions@v4
      with:
        package-name: 'kasa-monitor'
        package-type: 'container'
        min-versions-to-keep: ${{ inputs.keep_count }}
        delete-only-untagged-versions: false
        token: ${{ secrets.GITHUB_TOKEN }}