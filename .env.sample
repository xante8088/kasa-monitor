# Kasa Monitor Environment Variables Template
# Copy this file to .env and customize for your setup
# 
# IMPORTANT: Never commit .env file to version control!

# ============================================
# Docker Hub Configuration
# ============================================
# Your Docker Hub username (for pulling images)
DOCKER_USERNAME=xante8088

# ============================================
# Basic Configuration
# ============================================

# Database path (inside container)
SQLITE_PATH=/app/data/kasa_monitor.db

# Timezone (see: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
TZ=America/New_York

# Device polling interval in seconds (5-300)
POLLING_INTERVAL=30

# ============================================
# Security Configuration
# ============================================

# JWT Secret Key for authentication
# IMPORTANT: Generate a secure key for production!
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=change-this-to-a-secure-random-key-in-production

# Network access control
ALLOW_LOCAL_ONLY=true
ALLOWED_NETWORKS=192.168.0.0/16,10.0.0.0/8,172.16.0.0/12

# ============================================
# Optional: TP-Link Cloud Credentials
# ============================================
# Uncomment and fill in to discover cloud-connected devices

# TPLINK_USERNAME=your-email@example.com
# TPLINK_PASSWORD=your-password

# ============================================
# Optional: SSL/HTTPS Configuration  
# ============================================
# Uncomment to enable HTTPS (requires certificates)

# USE_HTTPS=false
# SSL_CERT_PATH=/app/ssl/cert.pem
# SSL_KEY_PATH=/app/ssl/key.pem
# FORCE_HTTPS=false

# ============================================
# Optional: InfluxDB Configuration
# ============================================
# Uncomment if using InfluxDB for time-series data

# INFLUXDB_URL=http://influxdb:8086
# INFLUXDB_TOKEN=your-influxdb-token-here
# INFLUXDB_ORG=kasa-monitor
# INFLUXDB_BUCKET=device-data

# InfluxDB initialization (first time setup)
# DOCKER_INFLUXDB_INIT_MODE=setup
# DOCKER_INFLUXDB_INIT_USERNAME=admin
# DOCKER_INFLUXDB_INIT_PASSWORD=SuperSecurePassword123!
# DOCKER_INFLUXDB_INIT_ORG=kasa-monitor
# DOCKER_INFLUXDB_INIT_BUCKET=device-data
# DOCKER_INFLUXDB_INIT_RETENTION=30d
# DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=your-super-secret-auth-token

# ============================================
# Performance Tuning
# ============================================

# Node.js memory limit in MB (adjust based on available RAM)
# Raspberry Pi 4 (4GB): 512
# Raspberry Pi 5 (8GB): 1024
# Desktop/Server: 2048
NODE_OPTIONS=--max-old-space-size=1024

# Python settings
PYTHONUNBUFFERED=1

# ============================================
# Logging Configuration
# ============================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file size and rotation
LOG_MAX_SIZE=10m
LOG_MAX_FILES=3

# ============================================
# Development Settings (don't use in production)
# ============================================

# NODE_ENV=development
# DEBUG=true
# NEXT_TELEMETRY_DISABLED=1

# ============================================
# External Services (optional)
# ============================================

# SMTP configuration for email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM=noreply@kasa-monitor.local

# Webhook for notifications
# WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# ============================================
# Raspberry Pi Specific Settings
# ============================================

# GPU memory split (for Pi only)
# GPU_MEM=64

# CPU governor (performance, ondemand, conservative, powersave)
# CPU_GOVERNOR=ondemand